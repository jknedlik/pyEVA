{
    "header": {
        "comment": "This configuration file was automatically created by GParserBuilder",
        "comment": "2015-Nov-01 12:46:36"
    },
    "adProb": {
        "comment": "The probability for random adaptions of values in evolutionary algorithms",
        "default": "1",
        "value": "1"
    },
    "sigma": {
        "comment": "The sigma for gauss-adaption in ES",
        "default": "0.025000000000000001",
        "value": "0.025000000000000001"
    },
    "sigmaSigma": {
        "comment": "Influences the self-adaption of gauss-mutation in ES",
        "default": "0.20000000000000001",
        "value": "0.20000000000000001"
    },
    "minSigma": {
        "comment": "The minimum amount value of sigma",
        "default": "0.001",
        "value": "0.001"
    },
    "maxSigma": {
        "comment": "The maximum amount value of sigma",
        "default": "1",
        "value": "1"
    },
    "startValues": {
        "comment": "The start values for all parameters",
        "comment": "Note that the number of entries also determines",
        "comment": "The number of parameter used in the optimization",
        "comment": "The number of entries in the vector may be changed",
        "comment": "in the configuration file.",
        "default": {
            "item": "1",
            "item": "1",
            "item": "1"
        },
        "value": {
            "item": "1",
            "item": "1",
            "item": "1"
        }
    },
    "lowerBoundaries": {
        "comment": "The lower boundaries for all parameters",
        "comment": "Note that as many entries are needed as",
        "comment": "There are entries in the startValues vector",
        "default": {
            "item": "0",
            "item": "0",
            "item": "0"
        },
        "value": {
            "item": "0",
            "item": "0",
            "item": "0"
        }
    },
    "upperBoundaries": {
        "comment": "The upper boundaries for all parameters",
        "comment": "Note that as many entries are needed as",
        "comment": "There are entries in the startValues vector",
        "default": {
            "item": "2",
            "item": "2",
            "item": "2"
        },
        "value": {
            "item": "2",
            "item": "2",
            "item": "2"
        }
    },
    "evalPolicy": {
        "comment": "Specifies which strategy should be used to calculate the evaluation:",
        "comment": "0 (a.k.a. USESIMPLEEVALUATION): Always call the evaluation function, even for invalid solutions",
        "comment": "1 (a.k.a. USEWORSTCASEFORINVALID) : Assign the worst possible value to our fitness and evaluate only valid solutions",
        "comment": "2 (a.k.a. USESIGMOID): Assign a multiple of validityLevel_ and sigmoid barrier to invalid solutions, apply a sigmoid function to valid evaluations",
        "comment": "3 (a.k.a. USEWORSTKNOWNVALIDFORINVALID): Assign \"invalidityLevel*worstKnownValid\" to invalid individuals, using normal evaluation otherwise",
        "default": "0",
        "value": "0"
    },
    "steepness": {
        "comment": "When using a sigmoid function to transform the individual's fitness,",
        "comment": "this parameter influences the steepness of the function at the center of the sigmoid.",
        "comment": "The parameter must have a value > 0.",
        "default": "1000",
        "value": "1000"
    },
    "barrier": {
        "comment": "When using a sigmoid function to transform the individual's fitness,",
        "comment": "this parameter sets the upper\/lower boundary of the sigmoid.",
        "comment": "The parameter must have a value > 0.",
        "default": "10000",
        "value": "10000"
    },
    "maxUnsuccessfulAdaptions": {
        "comment": "The maximum number of unsuccessful adaptions in a row for one call to adapt()",
        "default": "1000",
        "value": "1000"
    },
    "maxRetriesUntilValid": {
        "comment": "The maximum allowed number of retries during the",
        "comment": "adaption of individuals until a valid solution was found",
        "comment": "A parameter set is considered to be \"valid\" if",
        "comment": "it passes all validity checks",
        "default": "10",
        "value": "10"
    },
    "maximize": {
        "comment": "Specifies whether the individual should be maximized (1) or minimized (0)",
        "comment": "Note that minimization is the by far most common option.",
        "default": "false",
        "value": "false"
    },
    "perItemCrossOverProbability": {
        "comment": "The likelihood for two data items to be exchanged",
        "default": "0.5",
        "value": "0.5"
    },
    "targetFunction": {
        "comment": "Specifies which target function should be used:",
        "comment": "0: Parabola",
        "comment": "1: Berlich",
        "default": "0",
        "value": "0"
    }
}
